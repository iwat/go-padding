package padding

import (
	"bytes"
	"encoding/hex"
	"testing"
)

func TestPad(t *testing.T) {
	a := []byte{0xff}
	aa := Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x05, 0x05, 0x05, 0x05}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x04, 0x04, 0x04}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x02}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}

	a = []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}
	aa = Pkcs7.Pad(a, 16)
	if bytes.Compare(aa, []byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10}) != 0 {
		t.Log(hex.Dump(aa))
		t.Error("wrong padding result")
	}
}
